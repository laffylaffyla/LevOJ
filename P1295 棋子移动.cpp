/*
题目描述
有 2n 个棋子（n≥4）排成一行，开始位置为白色全部在左边，黑色全部在右边。（其中字母 O 表示白色棋子，字母 X 表示黑色棋子）OOOOXXXX。移动棋子的规则是：每次必须同时移动相邻两个棋子，颜色不限，可以左移也可以右移一空位上去，但不能调换两个棋子的左右位，每次移动必须跳过若干个棋子（不能平移），要求最后能够移成黑白相间的一行棋子。例如当 n=4 时，最终排列情况为：OXOXOXOX。输出棋子移动的过程。

输入描述
多组输入，每组一个正整数，占一行。

输出描述
输出移动步骤，每一步操作占一行

样例输入
4

样例输出
4,5-->9,10
8,9-->4,5
2,3-->8,9
7,8-->2,3
1,2-->7,8
*/

#include<iostream>

using namespace std;

void move(int);

int main()
{
	int n;
	while (cin >> n)
	{
        move(n);
	}
	return 0;
}

void move(int n)
{
    if (n == 4)
    {
        cout << "4,5-->9,10" << endl;
        cout << "8,9-->4,5" << endl;
        cout << "2,3-->8,9" << endl;
        cout << "7,8-->2,3" << endl;
        cout << "1,2-->7,8" << endl;
    }
    else
    {
        cout << n << "," << n + 1 << "-->" << 2 * n + 1 << "," << 2 * n + 2 << endl;
        cout << 2 * n - 1 << "," << 2 * n << "-->" << n << "," << n + 1 << endl;
        move(n - 1);
    }
}