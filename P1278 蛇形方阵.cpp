/*
题目描述
输出一个 n 阶方阵，其元素排列方式为：从左上角开始按列顺序呈现出蛇形。如：

    1 20 21 40 41 60 61 80 81 100
    2 19 22 39 42 59 62 79 82 99
    3 18 23 38 43 58 63 78 83 98
    4 17 24 37 44 57 64 77 84 97
    5 16 25 36 45 56 65 76 85 96
    6 15 26 35 46 55 66 75 86 95
    7 14 27 34 47 54 67 74 87 94
    8 13 28 33 48 53 68 73 88 93
    9 12 29 32 49 52 69 72 89 92
    10 11 30 31 50 51 70 71 90 91
输入描述
每行一个正整数 n (n <= 120)，表示 n 阶方阵。

输出描述
按列序排列的蛇形矩阵，每个方阵之间空一行。每个矩阵元素间一个空格，包含最后一个元素之后。

样例输入
3
4

样例输出
1 6 7
2 5 8
3 4 9


1 8 9 16
2 7 10 15
3 6 11 14
4 5 12 13
*/

#include<iostream>

using namespace std;

int m[122][122];

int main()
{
	int n, c, x, y, dir;
	const int dx[] = { 1,-1 };
	while (cin >> n)
	{
		x = y = dir = c = 0;
		while (y < n)
		{
			c++;
			m[x][y] = c;
			x += dx[dir];
			if (x == n)
			{
				x--;
				y++;
				dir = 1 - dir;
			}
			if (x == -1)
			{
				x++;
				y++;
				dir = 1 - dir;
			}
		}
		for (x = 0; x < n; x++)
		{
			for (y = 0; y < n; y++)
				cout << m[x][y] << " ";
			cout << endl;
		}
		cout << endl;
	}
	return 0;
}