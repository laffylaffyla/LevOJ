/*
在国际象棋棋盘上 (共 64 格) 放麦粒，第一格一粒，…… 后面一格总是前面一格的两倍，摆满整个棋盘后，可放置的麦粒数达到了 18446744073709551615, 如果再继续增加格子，比如格子数到达 3021377 时，放置的麦粒数将达到 909526 位。现要求给定的格子数 n (小于 3100000), 计算放置麦粒数目的最后 500 位数字.

输入描述
一个正整数 n

输出描述
麦粒总数的最后 500 位 (不足 500 位时最高位补 0)

样例输入
11213

样例输出

*/

#include<iostream>

using namespace std;

int main()
{
	int a[505], l, n;
	while (cin >> n)
	{
		l = 1;
		a[0] = 1;
		for (int i = 1; i < 504; i++)
			a[i] = 0;
		while (n--)
		{
			for (int i = 0; i < l; i++)
				a[i] *= 2;
			for (int i = 0; i < l; i++)
			{
				a[i + 1] += a[i] / 10;
				a[i] %= 10;
			}
			for ( ; a[l] && l < 501; l++)
			{
				a[l + 1] += a[l] / 10;
				a[l] %= 10;
			}
		}
		a[0]--;
		for (l = 499; l >= 0; l--)
			cout << a[l];
		cout << endl;
	}
	return 0;
}